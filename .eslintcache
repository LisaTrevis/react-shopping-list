[{"/Users/melissatrevis/react-projects/shopping-list/src/App.js":"1","/Users/melissatrevis/react-projects/shopping-list/src/Alert.js":"2","/Users/melissatrevis/react-projects/shopping-list/src/index.js":"3","/Users/melissatrevis/react-projects/shopping-list/src/List.js":"4"},{"size":3346,"mtime":1611275335601,"results":"5","hashOfConfig":"6"},{"size":146,"mtime":1611272400185,"results":"7","hashOfConfig":"6"},{"size":219,"mtime":1611271774250,"results":"8","hashOfConfig":"6"},{"size":909,"mtime":1611271850925,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1ppbwsr",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/melissatrevis/react-projects/shopping-list/src/App.js",["19"],"import React, { useState, useEffect } from \"react\";\nimport { FaShoppingCart, FaClipboardList } from \"react-icons/fa\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\n// If user enters duplicate, set up alert to ask user if they want to add it again. If so, keep function the same, if not, switch to new Set() function.\n// Create array with previously entered items to choose from as a drop down suggestion list?\n// Add button to check off list and put item in secondary array\n// Add toggle button to display secondary array\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"list\"));\n  } else {\n    return [];\n  }\n};\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ msg: \"\", type: \"\" });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      showAlert(\"danger\", \"Please add an item\");\n    } else if (name && isEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, title: name };\n          }\n          return item;\n        })\n      );\n      setName(\"\");\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(\"success\", \"item name changed\");\n    } else {\n      showAlert(\"success\", \"Item added to list\");\n      const newItem = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newItem]);\n      setName(\"\");\n    }\n  };\n\n  const showAlert = (type = \"placeholder\", msg = \"\") => {\n    setAlert({ type, msg });\n  };\n\n  const clearList = () => {\n    showAlert(\"danger\", \"List cleared\");\n    setList([]);\n  };\n\n  const removeItem = (id) => {\n    showAlert(\"danger\", \"Item removed\");\n    setList(list.filter((item) => item.id !== id));\n  };\n\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      showAlert();\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [alert]);\n\n  return (\n    <section className=\"section-center\">\n      <form className=\"grocery-form\" onSubmit={handleSubmit}>\n        <Alert {...alert} list={list} />\n        <header>\n          <FaShoppingCart className=\"icon\" />\n          <h3>Shopping List</h3>\n        </header>\n        <div className=\"form-control\">\n          <input\n            type=\"text\"\n            className=\"grocery\"\n            placeholder=\"e.g. eggs\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button className=\"submit-btn\" type=\"submit\">\n            {isEditing ? \"edit\" : \"submit\"}\n          </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div className=\"grocery-container\">\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n          <button className=\"clear-btn\" onClick={clearList}>\n            Clear list\n          </button>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","/Users/melissatrevis/react-projects/shopping-list/src/Alert.js",[],"/Users/melissatrevis/react-projects/shopping-list/src/index.js",[],"/Users/melissatrevis/react-projects/shopping-list/src/List.js",[],{"ruleId":"20","severity":1,"message":"21","line":2,"column":26,"nodeType":"22","messageId":"23","endLine":2,"endColumn":41},"no-unused-vars","'FaClipboardList' is defined but never used.","Identifier","unusedVar"]